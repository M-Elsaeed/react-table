{"version":3,"sources":["Actions/LoginActions.js","Components/AmeenLoginRedux.js","cookie.js","Containers/AmeenLoginContainer.js","Actions/DashboardActions.js","store.js","Components/AmeenDashboardRedux.js","Containers/AmeenDashboardContainer.js","App.js","Reducers/LoginReducer.js","Reducers/DashboardReducer.js","Reducers/RootReducer.js","index.js"],"names":["LOGIN_ATTEMPT","INVALID_LOGIN_ATTEMPT","LOGIN_ATTEMPT_SUCCESS","LOGIN_ATTEMPT_FAILURE","CHANGE_EMAIL","CHANGE_PASSWORD","TOGGLE_REMEMBER","RESET_STATE","Login","test","this","props","email","password","resetState","_this","isLoggedIn","react_default","a","createElement","Redirect","to","className","id","invalidCredentials","loading","undefined","submitted","emailValid","name","value","onChange","e","changeEmail","target","placeholder","type","passValid","changePassword","remember","checked","toggleRemember","onClick","preventDefault","disabled","style","cursor","login","invalidLoginAttempt","Component","CookieInterface","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","ca","split","i","length","c","charAt","substring","indexOf","getCookie","connect","state","dispatch","thisState","newEmail","newPass","newPassword","obj","request","axios","post","payload","then","response","error","data","status","cookies","setCookie","access_token","message","errors","loginPage","PRE_FETCH","FETCH","FETCH_SUCCESS","FETCH_FAILURE","UPDATE_FILTER","pageIndexCounter","fetchFailure","middlewares","Dashboard","fetch","users","usersNo","console","log","getNumberOfUsers","updateFilter","succeededFetching","usersList","filter","elem","fullName","includes","map","item","key","userID","contactInfo","role","failedFetching","isLoading","dashboard","newFilter","pageSize","pageIndex","headers","Authorization","respData","catch","err","DashboardRedux","App","Switch","Route","exact","path","component","LoginContainer","DashboardContainer","INITIAL_STATE","checkUserCookie","rootReducer","combineReducers","arguments","action","Object","objectSpread","errorResponse","newRemember","String","x","concat","toConsumableArray","applyMiddleware","promise","composer","compose","store","createStore","ReactDOM","render","es","HashRouter","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.951163c5.chunk.js","sourcesContent":["import axios from 'axios';\r\n//Post list\r\nexport const LOGIN_ATTEMPT = 'LOGIN_ATTEMPT';\r\nexport const INVALID_LOGIN_ATTEMPT = 'INVALID_LOGIN_ATTEMPT';\r\nexport const LOGIN_ATTEMPT_SUCCESS = 'LOGIN_ATTEMPT_SUCCESS';\r\nexport const LOGIN_ATTEMPT_FAILURE = 'LOGIN_ATTEMPT_FAILURE';\r\nexport const CHANGE_EMAIL = 'CHANGE_EMAIL';\r\nexport const CHANGE_PASSWORD = 'CHANGE_PASSWORD';\r\nexport const TOGGLE_REMEMBER = 'TOGGLE_REMEMBER';\r\nexport const RESET_STATE = 'RESET_STATE';\r\n\r\n\r\nexport function resetState() {\r\n\r\n    return {\r\n        type: RESET_STATE\r\n    };\r\n}\r\n\r\nexport function invalidLoginAttempt() {\r\n    return {\r\n        type: INVALID_LOGIN_ATTEMPT\r\n    };\r\n}\r\n\r\nexport function login(obj) {\r\n    //console.log('fetch called');\r\n    //console.log(JSON.stringify(obj));\r\n    const request = axios.post('http://173.199.166.52/~wknode/api/api/login', obj);\r\n\r\n    return {\r\n        type: LOGIN_ATTEMPT,\r\n        loading: true,\r\n        payload: request\r\n    };\r\n}\r\n\r\nexport function loginSuccess() {\r\n    //console.log('success called');\r\n    return {\r\n        type: LOGIN_ATTEMPT_SUCCESS,\r\n        loading: false\r\n    };\r\n}\r\n\r\nexport function loginFailure(error) {\r\n    //console.log('failed called');\r\n    return {\r\n        type: LOGIN_ATTEMPT_FAILURE,\r\n        loading: false,\r\n        errors: error\r\n    };\r\n}\r\n\r\nexport function changeEmail(newEmail) {\r\n    //console.log('change Email called');\r\n    return {\r\n        type: CHANGE_EMAIL,\r\n        newEmail: newEmail\r\n    };\r\n}\r\n\r\nexport function changePassword(newPass) {\r\n    //console.log('change password called');\r\n    return {\r\n        type: CHANGE_PASSWORD,\r\n        newPassword: newPass\r\n    };\r\n}\r\n\r\nexport function toggleRememberMe() {\r\n    //console.log('remember me toggeled');\r\n    return {\r\n        type: TOGGLE_REMEMBER\r\n    };\r\n}","import React, { Component } from 'react';\r\nimport './AmeenLogin.scss';\r\nimport { Redirect } from 'react-router'\r\n\r\nclass Login extends Component {\r\n    emailValid() {\r\n        let emailRegex = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/gi;\r\n        return emailRegex.test(this.props.email);\r\n    }\r\n    passValid() {\r\n        let passRegex = /^...+$/gi;\r\n        return passRegex.test(this.props.password);\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.resetState();\r\n    }\r\n    render() {\r\n        if (this.props.isLoggedIn) {\r\n            return (\r\n                <Redirect to=\"/dashboard\" />);\r\n        }\r\n        return (\r\n            <div className=\"ameen-login-component\" >\r\n\r\n                <form className=\"loginForm\">\r\n                <div className=\"circles-container\" >\r\n                    <div className=\"semicircle\" >\r\n                        <div id=\"semicircle__blue\" className=\"semicircle__blue\"></div>\r\n                        <div id=\"semicircle__logo\" className=\"semicircle__logo\"></div>\r\n                    </div>\r\n                    <div className=\"dashed-ellipse\" >\r\n                        <div id=\"dashed-ellipse__border\" className=\"dashed-ellipse__border\"></div>\r\n                    </div>\r\n                    <div className=\"solid-ellipse\" >\r\n                        <div id=\"solid-ellipse__border\" className=\"solid-ellipse__border\"></div>\r\n                    </div>\r\n                </div>\r\n                    <div className=\"loginForm__formContainer\">\r\n                        {\r\n                            this.props.invalidCredentials && !this.props.loading ?\r\n                                <div >username and password you added are not registered</div> : undefined\r\n                        }\r\n                        {\r\n\r\n                            (!this.props.submitted) && (this.props.email === '') ?\r\n                                <input\r\n                                    name=\"email\"\r\n                                    value={this.props.email}\r\n                                    onChange={e => this.props.changeEmail(e.target.value)}\r\n                                    placeholder=\"username\"\r\n                                    type=\"email\" />\r\n                                : this.emailValid() ?\r\n                                    <input\r\n                                        name=\"email\"\r\n                                        value={this.props.email}\r\n                                        onChange={e => this.props.changeEmail(e.target.value)}\r\n                                        placeholder=\"email\"\r\n                                        type=\"email\" /> :\r\n                                    <input\r\n                                        name=\"email\"\r\n                                        value={this.props.email}\r\n                                        onChange={e => this.props.changeEmail(e.target.value)}\r\n                                        placeholder=\"email\"\r\n                                        type=\"email\" />}\r\n\r\n                        {\r\n                            this.props.submitted && !this.emailValid() && this.props.email !== '' ?\r\n                                <div>\r\n                                    <p>please enter valid format</p>\r\n                                </div>\r\n                                : undefined\r\n                        }\r\n                        {\r\n                            this.props.submitted && !this.emailValid() && this.props.email === '' ?\r\n                                <div>\r\n                                    <p>please fill the field password username</p>\r\n                                </div>\r\n                                : undefined\r\n                        }\r\n\r\n                        {(!this.props.submitted) && (this.props.password === '') ?\r\n                            <input\r\n                                name=\"password\"\r\n                                value={this.props.password}\r\n                                onChange={e => this.props.changePassword(e.target.value)}\r\n                                placeholder=\"password\"\r\n                                type=\"password\" /> :\r\n                            this.passValid() ?\r\n                                <input\r\n                                    name=\"password\"\r\n                                    value={this.props.password}\r\n                                    onChange={e => this.props.changePassword(e.target.value)}\r\n                                    placeholder=\"password\"\r\n                                    type=\"password\" /> :\r\n                                <input\r\n                                    name=\"password\"\r\n                                    value={this.props.password}\r\n                                    onChange={e => this.props.changePassword(e.target.value)}\r\n                                    placeholder=\"password\"\r\n                                    type=\"password\" />\r\n                        }\r\n                        {\r\n                            this.props.submitted && !this.passValid() && this.props.password !== '' ?\r\n                                <div>\r\n                                    <p>please enter valid format</p>\r\n                                </div>\r\n                                : undefined\r\n                        }\r\n                        {\r\n                            this.props.submitted && !this.passValid() && this.props.password === '' ?\r\n                                <div>\r\n                                    <p>please fill the field password</p>\r\n                                </div>\r\n                                : undefined\r\n                        }\r\n                        <label>\r\n                            {\r\n                                this.props.remember === \"true\" ?\r\n                                    <input\r\n                                        checked\r\n                                        name=\"remember\"\r\n                                        onChange={e => this.props.toggleRemember()}\r\n                                        type=\"checkbox\" /> :\r\n                                    <input\r\n                                        name=\"remember\"\r\n                                        onChange={e => this.props.toggleRemember()}\r\n                                        type=\"checkbox\" />\r\n                            }\r\n                            Remember Me\r\n                        </label>\r\n                        {\r\n                            this.props.loading ?\r\n                                // abc@dkf.com\r\n                                <button\r\n                                    onClick={e => e.preventDefault()}\r\n                                    disabled\r\n                                    style={{ cursor: \"not-allowed\" }}\r\n                                    className=\"loginButton\">Please Wait...\r\n                                </button>\r\n                                :\r\n                                <button\r\n                                    onClick={e => {\r\n                                        e.preventDefault();\r\n                                        (this.emailValid() && this.passValid()) ?\r\n                                            this.props.login({\r\n                                                \"email\": this.props.email, \"password\": this.props.password, \"remember\": this.props.remember\r\n                                            })\r\n                                            :\r\n                                            this.props.invalidLoginAttempt()\r\n                                    }\r\n                                    }\r\n                                    className=\"loginButton\">LOG IN</button>\r\n                        }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","export default class CookieInterface {\r\n    static setCookie(cname, cvalue, exdays) {\r\n        var d = new Date();\r\n        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n        var expires = \"expires=\" + d.toUTCString();\r\n        document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n    }\r\n\r\n    static getCookie(cname) {\r\n        var name = cname + \"=\";\r\n        var ca = document.cookie.split(';');\r\n        for (var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) === ' ') {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) === 0) {\r\n                return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    static checkUserCookie() {\r\n        let user = this.getCookie(\"webkeyzAccessToken\");\r\n        if (user !== \"\") {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}","import {\r\n    connect\r\n} from 'react-redux'\r\nimport {\r\n    login,\r\n    invalidLoginAttempt,\r\n    loginSuccess,\r\n    loginFailure,\r\n    changeEmail,\r\n    changePassword,\r\n    toggleRememberMe,\r\n    resetState\r\n} from '../Actions/LoginActions';\r\nimport loginPage from '../Components/AmeenLoginRedux';\r\nimport cookies from '../cookie'\r\nconst mapStateToProps = (state) => {\r\n    //console.log(\"mapState to props state\", state)\r\n    //console.log('COKIEEEEE',cookies);\r\n    return {\r\n        email: state.login.email,\r\n        password: state.login.password,\r\n        remember: state.login.remember,\r\n        submitted: state.login.submitted,\r\n        loading: state.login.loading,\r\n        isLoggedIn: state.login.isLoggedIn,\r\n        invalidCredentials: state.login.invalidCredentials\r\n    };\r\n}\r\nconst mapDispatchToProps = (dispatch,thisState) => {\r\n    return {\r\n        resetState: () => {\r\n            dispatch(resetState())\r\n        },\r\n        invalidLoginAttempt: () => {\r\n            dispatch(invalidLoginAttempt())\r\n        },\r\n        changeEmail: (newEmail) => {\r\n            dispatch(changeEmail(newEmail))\r\n        },\r\n        changePassword: (newPass) => {\r\n            dispatch(changePassword(newPass))\r\n        },\r\n        toggleRemember: () => {\r\n            dispatch(toggleRememberMe())\r\n        },\r\n        login: (obj) => {\r\n            dispatch(login(obj)).payload\r\n                .then((response) => {\r\n                    //console.log(obj);\r\n                    //console.log(\"responseeeeeeeeeeeeee\", response.data);\r\n                    //console.log(response.data.status);\r\n                    if (response.data.status === 'true') {\r\n                        cookies.setCookie('webkeyzAccessToken', response.data.access_token, 1);\r\n                        if(obj.remember==='true'){\r\n                            cookies.setCookie('savedEmail', obj.email, 30);\r\n                            cookies.setCookie('savedPassword', obj.password, 30);\r\n                            cookies.setCookie('rememberMe', obj.remember, 30);\r\n                        }\r\n                        dispatch(loginSuccess());\r\n                        // Navigate to dashboard after saving the token in a cookie.\r\n                    } else {\r\n                        dispatch(loginFailure(response.data.message));\r\n                        // Show wrong email/password\r\n                    }\r\n                });\r\n\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(loginPage);","import axios from 'axios';\r\nimport cookies from '../cookie'\r\n//Post list\r\nexport const PRE_FETCH = 'PRE_FETCH';\r\nexport const FETCH = 'FETCH';\r\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS';\r\nexport const FETCH_FAILURE = 'FETCH_FAILURE';\r\nexport const UPDATE_FILTER = 'UPDATE_FILTER';\r\n\r\n\r\nexport function preFetch() {\r\n    //console.log('preFetch called');\r\n    return {\r\n        type: PRE_FETCH\r\n    };\r\n}\r\n\r\nexport function updateFilter(newFilter) {\r\n    //console.log('preFetch called');\r\n    return {\r\n        type: UPDATE_FILTER,\r\n        newFilter: newFilter\r\n    };\r\n}\r\n\r\n\r\nlet pageIndexCounter = 1;\r\n\r\nexport function fetch() {\r\n    console.log('fetch called');\r\n    const request = axios.post('http://173.199.166.52/~wknode/api/api/users', {\r\n        \"pageSize\": 500,//20,\r\n        \"pageIndex\": pageIndexCounter++\r\n    }, {\r\n        headers: {\r\n            Authorization: cookies.getCookie('webkeyzAccessToken')\r\n        }\r\n    });\r\n    console.log(pageIndexCounter);\r\n    return {\r\n        type: FETCH,\r\n        payload: request\r\n    };\r\n}\r\n\r\nexport function fetchSuccess(respData) {\r\n    //console.log('success called');\r\n    return {\r\n        type: FETCH_SUCCESS,\r\n        users: respData\r\n    };\r\n}\r\n\r\nexport function fetchFailure() {\r\n    //console.log('failure called');\r\n    return {\r\n        type: FETCH_FAILURE,\r\n    };\r\n}","import {\r\n    createStore,\r\n    applyMiddleware,\r\n    compose\r\n} from 'redux';\r\nimport rootReducer from './Reducers/RootReducer';\r\nimport promise from 'redux-promise';\r\nimport logger from 'redux-logger';\r\n\r\nlet middlewares;\r\nif (process.env.NODE_ENV !== 'production') {\r\n    // if development let action appear in //console.log\r\n    middlewares = applyMiddleware(promise, logger);\r\n} else {\r\n    // if production\r\n    middlewares = applyMiddleware(promise);\r\n}\r\nconst composer = compose(middlewares);\r\n// usually the reducer is the rootReducer where we previously grouped all the reducers into one using combine reducers\r\nexport default function () {\r\n    return createStore(rootReducer, composer);\r\n}","import React, { Component } from 'react';\r\nimport './AmeenDashboard.scss';\r\nimport './icons.scss';\r\nclass Dashboard extends Component {\r\n    componentDidMount() {\r\n        this.props.fetch()\r\n    }\r\n    getNumberOfUsers() {\r\n        return this.props.users ? this.props.users.usersNo : '';\r\n    }\r\n    isLoading() {\r\n        console.log(this.props.loading);\r\n        return this.props.loading;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"ameen-dashboard-component\" >\r\n                <div className=\"side-panel-back\" >\r\n\r\n                </div>\r\n                <div className=\"side-panel\" >\r\n                    <div className=\"side-panel__semi-circle\" >\r\n                        <div id=\"side-panel__blue\" className=\"side-panel__blue\"></div>\r\n                        <div id=\"side-panel__logo\" className=\"side-panel__logo\"></div>\r\n                    </div>\r\n                    <div className=\"dashed-ellipse\" >\r\n                        <div id=\"dashed-ellipse__border\" className=\"dashed-ellipse__border\"></div>\r\n                    </div>\r\n                    <div className=\"solid-ellipse\" >\r\n                        <div id=\"solid-ellipse__border\" className=\"solid-ellipse__border\"></div>\r\n                    </div>\r\n                    <div className=\"side-panel__tabs\" >\r\n                        <div className=\"side-panel__tab --active\" >\r\n                            <p>\r\n                                <i className=\"icon-User --float-left\"><span > Users</span></i>\r\n                                <i className=\"icon-Arrow --float-right --small-icon\"></i>\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"side-panel__tab\" >\r\n                            <p className=\"--inactive\" >\r\n                                <i className=\"icon-Askar --float-left\"><span > Azkar</span></i>\r\n                                <i className=\"icon-Arrow --float-right --small-icon\"></i>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"top-bar\" >\r\n                    <div className=\"top-bar__users\" >\r\n                        <i className=\"icon-User --float-left\"></i> <span >&nbsp;{this.getNumberOfUsers()} Users</span>\r\n                    </div>\r\n                    <div className=\"top-bar__add-btn\" >\r\n                        <i className=\"icon-Plus --float-left --small-icon\"></i><span>&nbsp;Add User</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"user-side-bar\" >\r\n                    <div className=\"user-side-bar__img\" ></div>\r\n                    <div className=\"user-side-bar__hello\"><span>Hello</span><br></br><span className=\"--sky-blue\">M.Diab</span></div>\r\n                </div>\r\n                <div className=\"content\" >\r\n                    {/* Using Divs */}\r\n                    <div>\r\n                        <div className=\"--header-div\">\r\n                            <p>Users</p>\r\n                            <input\r\n                                id='filter'\r\n                                placeholder=\"search\"\r\n                                onChange={\r\n                                    (e) => {\r\n                                        this.props.updateFilter(e.target.value);\r\n                                    }\r\n                                }\r\n                                type=\"text\" />\r\n                        </div>\r\n                        <div className=\"--header-div\">\r\n                            <p>ID</p>\r\n                            <p>NAME</p>\r\n                            <p>EMAIL</p>\r\n                            <p>ROLE</p>\r\n                        </div>\r\n\r\n\r\n                        {\r\n                            this.props.succeededFetching ? this.props.users.usersList\r\n                                .filter((elem) => { return elem.fullName.includes(this.props.filter) })\r\n                                .map((item, i) => {\r\n\r\n                                    //console.log(item);\r\n                                    return (\r\n                                        <div key={i} className=\"--data-div\">\r\n                                            <p>\r\n                                                {item.userID}\r\n                                            </p>\r\n                                            <p className=\"--sky-blue\" >\r\n                                                {item.fullName}\r\n                                            </p>\r\n                                            <p >\r\n                                                {item.contactInfo}\r\n                                            </p>\r\n                                            <p >\r\n                                                {item.role}\r\n                                            </p>\r\n                                        </div>\r\n                                    )\r\n                                }) : undefined\r\n                        }\r\n                        {\r\n                            this.props.failedFetching && !this.props.succeededFetching ? <div className=\"\" >Failed To fetch content</div> : undefined\r\n                        }\r\n                        {\r\n                            this.props.failedFetching && this.props.succeededFetching ? <div className=\"\" >No more Users!</div> : undefined\r\n                        }\r\n                        {\r\n                            this.props.failedFetching && this.props.succeededFetching\r\n                                ? undefined :\r\n                                <button className=\"view-more\"\r\n                                    onClick={\r\n                                        (e) => {\r\n                                            e.preventDefault();\r\n                                            this.props.fetch()\r\n                                        }\r\n\r\n                                    }\r\n                                    disabled={this.isLoading()}>\r\n                                    View More...\r\n                                </button>\r\n                        }\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;\r\n","import {\r\n    connect\r\n} from 'react-redux'\r\nimport {\r\n    fetch,\r\n    fetchSuccess,\r\n    fetchFailure,\r\n    preFetch,\r\n    updateFilter\r\n} from '../Actions/DashboardActions';\r\nimport DashboardRedux from '../Components/AmeenDashboardRedux';\r\nconst mapStateToProps = (state) => {\r\n    //console.log(\"mapState to props state\", state)\r\n    return {\r\n        succeededFetching: state.dashboard.succeededFetching,\r\n        failedFetching: state.dashboard.failedFetching,\r\n        loading: state.dashboard.loading,\r\n        users: state.dashboard.users,\r\n        filter: state.dashboard.filter\r\n    };\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateFilter: (newFilter) => {\r\n            dispatch(updateFilter(newFilter));\r\n        },\r\n        fetch: () => {\r\n            dispatch(preFetch());\r\n            dispatch(fetch())\r\n                .then((response) => {\r\n                    //console.log(\"responseeeeeeeeeeeeee\", response);\r\n                    //console.log(\"usersLISSSSSSSSSSSSSSSSSSSST\", response.payload.data.usersList);\r\n                    // //console.log(response.data.status);\r\n                    if (response.payload.data.status === 'true') {\r\n                        dispatch(fetchSuccess(response.payload.data));\r\n                        // Navigate to dashboard after saving the token in a cookie.\r\n                    } else {\r\n                        dispatch(fetchFailure());\r\n                        //conosole.log(hey)\r\n                        //Show wrong email/password\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    dispatch(fetchFailure());\r\n                });\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardRedux);","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport './App.css';\nimport LoginContainer from './Containers/AmeenLoginContainer'\nimport DashboardContainer from './Containers/AmeenDashboardContainer'\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/' component={LoginContainer} />\n          <Route exact path='/Login' component={LoginContainer} />\n          <Route exact path='/Dashboard' component={DashboardContainer} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {\r\n    LOGIN_ATTEMPT,\r\n    INVALID_LOGIN_ATTEMPT,\r\n    LOGIN_ATTEMPT_SUCCESS,\r\n    LOGIN_ATTEMPT_FAILURE,\r\n    CHANGE_EMAIL,\r\n    CHANGE_PASSWORD,\r\n    TOGGLE_REMEMBER,\r\n    RESET_STATE\r\n} from '../Actions/LoginActions'\r\nimport cookies from \"../cookie\";\r\nconst INITIAL_STATE = {\r\n    email: cookies.getCookie('savedEmail'),\r\n    password: cookies.getCookie('savedPassword'),\r\n    remember: cookies.getCookie('rememberMe'),\r\n    submitted: false,\r\n    loading: false,\r\n    isLoggedIn: cookies.checkUserCookie(),\r\n    invalidCredentials: false\r\n}\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case RESET_STATE:\r\n            {\r\n                return {\r\n                    ...INITIAL_STATE\r\n                }\r\n\r\n            }\r\n        case INVALID_LOGIN_ATTEMPT:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    submitted: true\r\n                }\r\n\r\n            }\r\n        case LOGIN_ATTEMPT:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    response: action.payload,\r\n                    loading: action.loading,\r\n                    isLoggedIn: false,\r\n                    submitted: true\r\n                }\r\n            }\r\n        case LOGIN_ATTEMPT_SUCCESS:\r\n            {\r\n                // Navigate to dashboard page and save token in cookie or in state\r\n                return {\r\n                    ...state,\r\n                    loading: action.loading,\r\n                    isLoggedIn: true\r\n                }\r\n            }\r\n        case LOGIN_ATTEMPT_FAILURE:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    errorResponse: action.errors,\r\n                    loading: action.loading,\r\n                    isLoggedIn: false,\r\n                    submitted: true,\r\n                    invalidCredentials: true\r\n                }\r\n            }\r\n        case CHANGE_EMAIL:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    email: action.newEmail\r\n                }\r\n            }\r\n        case CHANGE_PASSWORD:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    password: action.newPassword\r\n                }\r\n            }\r\n        case TOGGLE_REMEMBER:\r\n            {\r\n\r\n                let newRemember = state.remember === \"true\";\r\n                //console.log(\"before toggle\", newRemember);\r\n                newRemember = !newRemember;\r\n                newRemember = String(newRemember);\r\n                //console.log(\"after toggle\", newRemember);\r\n                return {\r\n                    ...state,\r\n                    remember: newRemember\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    PRE_FETCH,\r\n    FETCH,\r\n    FETCH_SUCCESS,\r\n    FETCH_FAILURE,\r\n    UPDATE_FILTER\r\n} from '../Actions/DashboardActions'\r\n\r\nconst INITIAL_STATE = {\r\n    succeededFetching: false,\r\n    failedFetching: false,\r\n    loading: false,\r\n    users: undefined,\r\n    filter:''\r\n}\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case UPDATE_FILTER:{\r\n            console.log('filter Updated');\r\n            console.log(action.newFilter)\r\n            return {\r\n                ...state,\r\n                filter: action.newFilter,\r\n            }\r\n        }\r\n        case PRE_FETCH:\r\n            {\r\n                console.log('this was called');\r\n                return {\r\n                    ...state,\r\n                    loading: true,\r\n\r\n                }\r\n\r\n            }\r\n        case FETCH:\r\n            {\r\n                console.log('this was called');\r\n                return {\r\n                    ...state,\r\n                    payload: action.payload\r\n                }\r\n\r\n            }\r\n        case FETCH_SUCCESS:\r\n            {\r\n                let x;\r\n                console.log(state.users)\r\n                if (!state.users) {\r\n                    console.log('error if')\r\n                    x = [...action.users.usersList]\r\n\r\n                } else {\r\n                    console.log('error else')\r\n                    x = [...state.users.usersList, ...action.users.usersList]\r\n                }\r\n                console.log(x)\r\n                return {\r\n                    ...state,\r\n                    succeededFetching: true,\r\n                    failedFetching: false,\r\n                    loading: false,\r\n                    users: {\r\n                        ...action.users,\r\n                        usersList: x\r\n                    }\r\n                }\r\n            }\r\n        case FETCH_FAILURE:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    failedFetching: true,\r\n                    loading: false\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    combineReducers\r\n} from 'redux';\r\nimport LoginReducer from './LoginReducer';\r\nimport DashboardReducer from './DashboardReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    login: LoginReducer,\r\n    dashboard: DashboardReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport storeCreator from './store'\nconst store = storeCreator();\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter >\n            <App />\n        </HashRouter>\n    </Provider>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}